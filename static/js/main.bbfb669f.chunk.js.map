{"version":3,"sources":["containers/Autocomplete/Autocomplete.js","components/AppHeader/AppHeader.js","axios/http-client.js","components/Item/Item.js","containers/Items/Items.js","store/actions.js","containers/Cart/Cart.js","components/AppBody/AppBody.js","components/AppFooter/AppFooter.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["Autocomplete","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","suggestions","userInput","currentTarget","value","filteredSuggestions","filter","suggestion","toLowerCase","indexOf","setState","activeSuggestion","showSuggestions","onClick","innerText","onKeyDown","_this$state","state","keyCode","length","suggestionsListComponent","_this$state2","react_default","a","createElement","className","map","index","key","react","type","Component","defaultProps","AppHeader","containers_Autocomplete_Autocomplete","API","axios","create","baseURL","Item","itemInfo","data","concat","discountPercent","src","img","alt","productName","quantity","discountPrice","mrp","addItemToCart","Items","fetchTasks","get","then","res","items","catch","error","console","log","getStockItems","item","components_Item_Item","productId","onAddToCart","connect","dispatch","payload","Cart","isCartEmpty","cartState","objectSpread","cart","keys","getCartItemsList","keyName","i","decrementQty","count","incrementQty","getSum","total","Math","round","getCartItemsLength","reduce","getSumOfItemsPrice","getCartTotal","applyDiscount","randomDiscount","floor","random","discount","cartDiscount","ceil","store","AppBody","react_router_dom","to","react_router","exact","path","render","component","AppFooter","id","target","rel","href","App","components_AppHeader_AppHeader","components_AppBody_AppBody","components_AppFooter_AppFooter","Boolean","window","location","hostname","match","initialState","reducer","arguments","undefined","action","defineProperty","_state$cart","remItemsInCart","objectWithoutProperties","_toPropertyKey","createStore","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bbfb669f.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Autocomplete.css';\r\n\r\nclass Autocomplete extends Component {\r\n  static propTypes = {\r\n    suggestions: PropTypes.instanceOf(Array)\r\n  };\r\n\r\n  static defaultProps = {\r\n    suggestions: []\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      // The active selection's index\r\n      activeSuggestion: 0,\r\n      // The suggestions that match the user's input\r\n      filteredSuggestions: [],\r\n      // Whether or not the suggestion list is shown\r\n      showSuggestions: false,\r\n      // What the user has entered\r\n      userInput: ''\r\n    };\r\n  }\r\n\r\n  onChange = e => {\r\n    const { suggestions } = this.props;\r\n    const userInput = e.currentTarget.value;\r\n\r\n    // Filter our suggestions that don't contain the user's input\r\n    const filteredSuggestions = suggestions.filter(\r\n      suggestion =>\r\n        suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1\r\n    );\r\n\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions,\r\n      showSuggestions: true,\r\n      userInput: e.currentTarget.value\r\n    });\r\n  };\r\n\r\n  onClick = e => {\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions: [],\r\n      showSuggestions: false,\r\n      userInput: e.currentTarget.innerText\r\n    });\r\n  };\r\n\r\n  onKeyDown = e => {\r\n    const { activeSuggestion, filteredSuggestions } = this.state;\r\n\r\n    // User pressed the enter key\r\n    if (e.keyCode === 13) {\r\n      this.setState({\r\n        activeSuggestion: 0,\r\n        showSuggestions: false,\r\n        userInput: filteredSuggestions[activeSuggestion]\r\n      });\r\n    } else if (e.keyCode === 38) {\r\n      // User pressed the up arrow\r\n      if (activeSuggestion === 0) {\r\n        return;\r\n      }\r\n\r\n      this.setState({ activeSuggestion: activeSuggestion - 1 });\r\n    } else if (e.keyCode === 40) {\r\n      // User pressed the down arrow\r\n      if (activeSuggestion - 1 === filteredSuggestions.length) {\r\n        return;\r\n      }\r\n\r\n      this.setState({ activeSuggestion: activeSuggestion + 1 });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onChange,\r\n      onClick,\r\n      onKeyDown,\r\n      state: {\r\n        activeSuggestion,\r\n        filteredSuggestions,\r\n        showSuggestions,\r\n        userInput\r\n      }\r\n    } = this;\r\n\r\n    let suggestionsListComponent;\r\n\r\n    if (showSuggestions && userInput) {\r\n      if (filteredSuggestions.length) {\r\n        suggestionsListComponent = (\r\n          <ul className=\"suggestions\">\r\n            {filteredSuggestions.map((suggestion, index) => {\r\n              let className;\r\n\r\n              // Flag the active suggestion with a class\r\n              if (index === activeSuggestion) {\r\n                className = 'suggestion-active';\r\n              }\r\n\r\n              return (\r\n                <li className={className} key={suggestion} onClick={onClick}>\r\n                  {suggestion}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        );\r\n      } else {\r\n        suggestionsListComponent = (\r\n          <div className=\"no-suggestions\">\r\n            <em>No suggestions, you're on your own!</em>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control search-field\"\r\n          onChange={onChange}\r\n          onKeyDown={onKeyDown}\r\n          value={userInput}\r\n        />\r\n        {suggestionsListComponent}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Autocomplete;\r\n","import React from 'react';\r\nimport './AppHeader.css';\r\nimport Autocomplete from '../../containers/Autocomplete/Autocomplete';\r\n\r\n/**\r\n * The application header\r\n */\r\nconst AppHeader = () => {\r\n  return (\r\n    <header className=\"app-header\">\r\n      Grocery App\r\n      <Autocomplete\r\n        suggestions={[\r\n          'Saffola Oil',\r\n          'Surf Excel',\r\n          'Dairy Milk',\r\n          'Lays Chips',\r\n          'Good Day Buiscuit',\r\n          'Coca Cola'\r\n        ]}\r\n      />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import axios from 'axios';\r\n\r\nexport const baseURL = ``;\r\n\r\nexport const API = axios.create({\r\n  baseURL: baseURL\r\n});\r\n","import React from 'react';\r\nimport './Item.css';\r\n\r\n/**\r\n * The application header\r\n */\r\nconst Item = props => {\r\n  const itemInfo = props.data;\r\n  return (\r\n    <div className=\"item col-sm-3\">\r\n      <div className=\"col-12\">\r\n        <span className=\"off-indicator\">{`${itemInfo.discountPercent}% OFF`}</span>\r\n      </div>\r\n      <div className=\"col-12\">\r\n        <img\r\n          src={itemInfo.img}\r\n          className=\"item-pic\"\r\n          alt={itemInfo.productName}\r\n        />\r\n      </div>\r\n      <div className=\"col-12\">{itemInfo.productName}</div>\r\n      <div className=\"col-12 quantity\">{itemInfo.quantity}</div>\r\n      <div className=\"price-block row\">\r\n        <div className=\"col-4\">\r\n          <span>&#x20b9;{itemInfo.discountPrice}</span>\r\n          <s>&#x20b9;{itemInfo.mrp}</s>\r\n        </div>\r\n        <div className=\"col-8\">\r\n          <button\r\n            className=\"btn btn-atc\"\r\n            onClick={() => props.addItemToCart(itemInfo)}\r\n          >\r\n            Add to Cart\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import React, { Component } from 'react';\r\nimport './Items.css';\r\nimport { API } from '../../axios/http-client';\r\nimport Item from '../../components/Item/Item';\r\nimport * as actionTypes from '../../store/actions';\r\nimport { connect } from 'react-redux';\r\n\r\n/**\r\n * The application body\r\n */\r\nclass Items extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: null\r\n    };\r\n  }\r\n\r\n  fetchTasks = () => {\r\n    API.get('api.json')\r\n      .then(res => {\r\n        this.setState({\r\n          items: res.data\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  getStockItems = () => {\r\n    return this.state.items\r\n      ? this.state.items.map((item, index) => {\r\n          return (\r\n            <Item\r\n              key={item.productId}\r\n              data={item}\r\n              addItemToCart={this.addItemToCart}\r\n            />\r\n          );\r\n        })\r\n      : 'Loading...';\r\n  };\r\n\r\n  addItemToCart = item => {\r\n    this.props.onAddToCart(item);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchTasks();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app-body container-fluid\">\r\n        <div className=\"row\">{this.getStockItems()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAddToCart: item =>\r\n      dispatch({ type: actionTypes.ADD_TO_CART, payload: { item } })\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Items);\r\n","export const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const INCREMENT_QUANTITY = 'INCREMENT_QUANTITY';\r\nexport const DECREMENT_QUANTITY = 'DECREMENT_QUANTITY';\r\n","import React, { Component } from 'react';\r\nimport './Cart.css';\r\nimport { connect } from 'react-redux';\r\nimport * as actionTypes from '../../store/actions';\r\n\r\n/**\r\n * The application cart\r\n */\r\nclass Cart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      discount: 0,\r\n      cartDiscount: 0\r\n    };\r\n  }\r\n  isCartEmpty = () => {\r\n    const cartState = { ...this.props.cart };\r\n    return Object.keys(cartState).length === 0;\r\n  };\r\n\r\n  getCartItemsList = () => {\r\n    const cartState = { ...this.props.cart };\r\n    return Object.keys(cartState).map((keyName, i) => (\r\n      <div className=\"cart-item row\" key={keyName}>\r\n        <div className=\"col-sm-4\">\r\n          <img\r\n            className=\"cart-item-img\"\r\n            src={cartState[keyName].img}\r\n            alt={cartState[keyName].productName}\r\n          />\r\n        </div>\r\n        <div className=\"col-sm-8 cart-item-details\">\r\n          <span className=\"cart-percent-ind\">\r\n            {cartState[keyName].discountPercent}% OFF\r\n          </span>\r\n          <div>{cartState[keyName].productName}</div>\r\n          <div>{cartState[keyName].quantity}</div>\r\n          <div className=\"cart-item-calculation row\">\r\n            <span\r\n              onClick={() => this.props.decrementQty(keyName)}\r\n              className=\"cart-item-plusminus\"\r\n            >\r\n              &nbsp;-&nbsp;\r\n            </span>\r\n            <span>{cartState[keyName].count}</span>\r\n            <span\r\n              onClick={() => this.props.incrementQty(keyName)}\r\n              className=\"cart-item-plusminus\"\r\n            >\r\n              &nbsp;+&nbsp;\r\n            </span>\r\n            <span>X</span>\r\n            <span>&#x20b9;{cartState[keyName].discountPrice}</span>\r\n            <s>&#x20b9;{cartState[keyName].mrp}</s>\r\n            <span className=\"cart-item-total\">\r\n              &#x20b9;{cartState[keyName].count *\r\n                cartState[keyName].discountPrice}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  getSum = (total, productId) => {\r\n    return total + Math.round(this.props.cart[productId].count);\r\n  };\r\n\r\n  getCartItemsLength = () => {\r\n    const cartState = { ...this.props.cart };\r\n    return Object.keys(cartState).reduce(this.getSum, 0);\r\n  };\r\n\r\n  getSumOfItemsPrice = (total, productId) => {\r\n    return (\r\n      total +\r\n      Math.round(\r\n        this.props.cart[productId].count *\r\n          this.props.cart[productId].discountPrice\r\n      )\r\n    );\r\n  };\r\n\r\n  getCartTotal = () => {\r\n    const cartState = { ...this.props.cart };\r\n    return Object.keys(cartState).reduce(this.getSumOfItemsPrice, 0);\r\n  };\r\n\r\n  applyDiscount = () => {\r\n    const randomDiscount = Math.floor(Math.random() * 8) + 8;\r\n    this.setState({\r\n      discount: randomDiscount,\r\n      cartDiscount: (this.getCartTotal() + 29) * ((100 - randomDiscount) / 100)\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"cart\">\r\n        {this.isCartEmpty() ? (\r\n          <h4 className=\"cart-empty\">Your cart is Empty!</h4>\r\n        ) : (\r\n          <div>\r\n            <h1>\r\n              My cart <span>{`(${this.getCartItemsLength()} items)`}</span>\r\n            </h1>\r\n            <div className=\"cart-total row\">\r\n              <div className=\"col-sm-6\">Sub Total</div>\r\n              <div className=\"col-sm-6\">&#x20b9;{this.getCartTotal()}</div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-6\">Delivery Charges</div>\r\n              <div className=\"col-sm-6\">&#x20b9;29</div>\r\n            </div>\r\n            {this.getCartItemsList()}\r\n            <h5>You think you're lucky, lets see by clicking this button</h5>\r\n            <button className=\"btn btn-success\" onClick={this.applyDiscount}>\r\n              Check Discount\r\n            </button>\r\n            {this.state.discount !== 0 ? (\r\n              <h3>\r\n                Congratulations, you just got {this.state.discount}% OFF, just\r\n                pay {Math.ceil(this.state.cartDiscount)}!\r\n              </h3>\r\n            ) : null}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = function(store) {\r\n  return {\r\n    cart: store.cart\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    decrementQty: productId =>\r\n      dispatch({\r\n        type: actionTypes.DECREMENT_QUANTITY,\r\n        payload: { productId }\r\n      }),\r\n    incrementQty: productId =>\r\n      dispatch({ type: actionTypes.INCREMENT_QUANTITY, payload: { productId } })\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\r\n","import React, { Component } from 'react';\r\nimport './AppBody.css';\r\nimport { Switch, Route, Redirect, Link } from 'react-router-dom';\r\nimport Items from '../../containers/Items/Items';\r\nimport Cart from '../../containers/Cart/Cart';\r\n\r\n/**\r\n * The application body\r\n */\r\nclass AppBody extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"app-body container-fluid\">\r\n        <div className=\"app-links\">\r\n          <Link className=\"app-nav-link\" to=\"/cart\">\r\n            Cart\r\n          </Link>\r\n          <Link className=\"app-nav-link\" to=\"/\">\r\n            Back to Storefront\r\n          </Link>\r\n        </div>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={() => <Redirect to=\"/react-grocery-app\" />}\r\n          />\r\n          <Route path=\"/react-grocery-app\" component={Items} />\r\n          <Route path=\"/cart\" component={Cart} />\r\n          <Route path=\"*\" render={() => <Redirect to=\"/react-grocery-app\" />} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppBody;\r\n","import React from 'react';\r\nimport './AppFooter.css';\r\n\r\n/**\r\n * The application footer\r\n */\r\nconst AppFooter = () => {\r\n  return (\r\n    <footer className=\"app-footer\">\r\n      Designed and Coded by Vishal Gulati (<a\r\n        id=\"footer-link\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        href=\"https://www.vishalgulati.com\"\r\n      >\r\n        www.vishalgulati.com\r\n      </a>)\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default AppFooter;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport AppHeader from './components/AppHeader/AppHeader';\nimport AppBody from './components/AppBody/AppBody';\nimport AppFooter from './components/AppFooter/AppFooter';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <AppHeader />\n        <AppBody />\n        <AppFooter />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from './actions';\r\n\r\nconst initialState = {\r\n  cart: {}\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_TO_CART: {\r\n      const { item } = action.payload;\r\n      const { productId } = item;\r\n      return {\r\n        ...state,\r\n        cart: state.cart[productId]\r\n          ? {\r\n              ...state.cart,\r\n              [productId]: {\r\n                ...item,\r\n                count: ++state.cart[productId].count\r\n              }\r\n            }\r\n          : {\r\n              ...state.cart,\r\n              [productId]: {\r\n                ...item,\r\n                count: 1\r\n              }\r\n            }\r\n      };\r\n    }\r\n    case actionTypes.INCREMENT_QUANTITY: {\r\n      const { productId } = action.payload;\r\n      return {\r\n        ...state,\r\n        cart: {\r\n          ...state.cart,\r\n          [productId]: {\r\n            ...state.cart[productId],\r\n            count: ++state.cart[productId].count\r\n          }\r\n        }\r\n      };\r\n    }\r\n    case actionTypes.DECREMENT_QUANTITY: {\r\n      const { productId } = action.payload;\r\n      if (state.cart[productId].count === 1) {\r\n        const { [productId]: val, ...remItemsInCart } = state.cart;\r\n        return {\r\n          ...state,\r\n          cart: {\r\n            ...remItemsInCart\r\n          }\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        cart: {\r\n          ...state.cart,\r\n          [productId]: {\r\n            ...state.cart[productId],\r\n            count: --state.cart[productId].count\r\n          }\r\n        }\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './store/reducer';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}